# MIF 2.1
# MIF File: np_core_only_Fe3O4_example_theoretical_params 
#Description: Simulation Constructed File, designed to simulate 
# DC/ AC sinusoid linear response s.t. radius ratio (C/D, where R = C +2D for core-shell), 
# maximize heating efficiency (SAR in emu / A/m in SI units), and the magnetization M -> {Md, Ms} 
#    
set pi [expr {4*atan(1.0)}]
set mu0 [expr {4*$pi*1e-7}]

RandomSeed 1
 
Parameter amp 3.7626e04 ;# Amplitude of the applied field, in T
Parameter freq 0.30 ;# Frequency of applied field, in MHz (10^6 Hz)

# Convert field amplitude from T to A/m
set amp [expr {$amp/$mu0}]

# Convert freq from MHz to natural frequency in rad/sec
set freq [expr {$freq*1.0e6*2*$pi}]


Specify Oxs_EllipsoidAtlas:core {
	  xrange {10e-10 130e-10}
      yrange {10e-10 130e-10}
	  zrange {10e-10 130e-10}
    } ;# spheres (core,shell) of maximum diameter 130 nm 

Specify Oxs_RectangularMesh:mesh [subst {
	cellsize {1e-10 1e-10 1e-10}
	atlas :core
}]

Specify Oxs_RungeKuttaEvolve:evolve {
  alpha 0.05
  method rkf54s
}

if 0 { }

Specify Oxs_ScriptUZeeman {
   script_args total_time
   script SineField
}
#Assuming an Amplitude of Hk A/m of a time-dependent sinusoid function, 
#the frequency is 3.0e5 Hz, dependent function on total_time, and is otherwise ready to go the distance.  

#Edit 03-10-2020: Modify Ha 3.7626e4 -> 0 to see how interactions with easy axis/ hard axis, 
# 
proc SineField { total_time } {
   global amp freq
   set pi [expr {4 *atan(1.0)}]
   set Hx [expr {$amp*sin($freq*$total_time)}]
   set dHx [expr {$amp*$freq*cos($freq*$total_time)}]
   return [list $Hx 0 0 $dHx 0 0]
}
#Returns vector of dH, H defined with magnitude, Ha = Hk, as multiplier about normal axis,
# under the contingent assumption that Hk = Ha perp Ms = M/Md.

Specify Oxs_Demag  {}

#Edit 02-17-20: Omission of Octant Code bc of verbosity of execution
# Ha from [7.2e3, 2.10e5] A/m {2.48e4,3.0e4,7.2e3, 1.25e4} 
# https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3759896/

# Ha_initial 3.7626e04

if 0 {
Specify Oxs_UniaxialAnisotropy {
     Ha 3.7626e04
	 axis {1 0 0}
} }

#Edit 03-10-20: UniformExchange A in J/m {} 

Specify Oxs_UniformExchange {
		A 1.2e-12
} ;# Assuming Md = 100 A /m != Aij; A = Aij = [1.4e-14, 1.2e-12] A/m = (mi - mj)/delta(i,j)
#Edit 03-01-20: Omitting UniaxialAnisotropy for analysis w/o

Specify Oxs_TimeDriver {
	    basename np_core_only_Fe3O4_example_theoretical_params
	    evolver :evolve
		stopping_dm_dt 0.1
                Ms {Oxs_AtlasScalarField {
                   atlas :core
                   default_value 0.0
                   values {
                      core 45
                   }
                }}
		mesh :mesh
		m0 {Oxs_AtlasVectorField {
		atlas :core
		default_value {0. 0. 0.}
		values {
		core {0 0 1}
		}
	}}
}

#core np s.t. boundary conditions, with Ms,max = 45